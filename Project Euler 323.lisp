;;;; Solutio for Problem 323 in Project Euler
;;;; Paulo Mendes, 20-MAY-2016

(defparameter *n-bits* 32)

(defparameter *x0* #(1.0D0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
                       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)
"Initial probability distribution where x0 = 0")

(defparameter *markov-matrix* 
   (loop with nrows = *n-bits*
         for i from 0 to nrows
         for j = '(1) then (mapcar #'+ (cons 0 j) (append j '(0)))
         collect (coerce
                   (append (loop for k from (- nrows 1 i) downto 0
                                 collect 0)
                     (mapcar #'(lambda (x)
                                 (coerce (/ x (expt 2 i))
                                  'double-float)) j)) 'array) into rows
         finally (return (nreverse rows))))

(defun mult-vector (mat vec)
"Multiplies a square matrix generated by *markov-matrix* by a
 distribution vector 'vec'"
   (reduce #'(lambda (x y) (map 'vector #'+ x y))
      (map 'vector #'(lambda (x y)
                        (map 'vector #'(lambda (a) (* a y)) x)) mat vec)))

(loop for j = *x0* then (mult-vector *markov-matrix* j)
      for k = (- 1 (aref j *n-bits*))
      while (> k 0.0000000000001) ; Sum P[32 bits] until 
        summing k)                ; there are enough digits 
